// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow to enhance property images using AI to improve their visual appeal.
 *
 * - enhancePropertyImage - A function that handles the image enhancement process.
 * - EnhancePropertyImageInput - The input type for the enhancePropertyImage function.
 * - EnhancePropertyImageOutput - The return type for the enhancePropertyImage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const EnhancePropertyImageInputSchema = z.object({
  imageDataUri: z
    .string()
    .describe(
      "A property image, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type EnhancePropertyImageInput = z.infer<typeof EnhancePropertyImageInputSchema>;

const EnhancePropertyImageOutputSchema = z.object({
  enhancedImageDataUri: z
    .string()
    .describe('The enhanced property image as a data URI.'),
});
export type EnhancePropertyImageOutput = z.infer<typeof EnhancePropertyImageOutputSchema>;

export async function enhancePropertyImage(
  input: EnhancePropertyImageInput
): Promise<EnhancePropertyImageOutput> {
  return enhancePropertyImageFlow(input);
}

const enhancePropertyImagePrompt = ai.definePrompt({
  name: 'enhancePropertyImagePrompt',
  input: {schema: EnhancePropertyImageInputSchema},
  output: {schema: EnhancePropertyImageOutputSchema},
  prompt: `Enhance the quality of the following property image. Improve its clarity, brightness, and colors to make it more visually appealing.

Image: {{media url=imageDataUri}}

Return the enhanced image as a data URI in the enhancedImageDataUri field.`, 
});

const enhancePropertyImageFlow = ai.defineFlow(
  {
    name: 'enhancePropertyImageFlow',
    inputSchema: EnhancePropertyImageInputSchema,
    outputSchema: EnhancePropertyImageOutputSchema,
  },
  async input => {
    const {output} = await enhancePropertyImagePrompt(input);
    return output!;
  }
);
