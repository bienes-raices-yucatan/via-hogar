{
  "entities": {
    "Property": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Property",
      "type": "object",
      "description": "Represents a real estate property listing in the Vía Hogar CMS.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Property entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the property."
        },
        "address": {
          "type": "string",
          "description": "Address of the property."
        },
        "price": {
          "type": "number",
          "description": "Price of the property."
        },
        "mainImageUrl": {
          "type": "string",
          "description": "URL or reference to the main image of the property."
        },
        "sectionIds": {
          "type": "array",
          "description": "References to PageSection entities. (Relationship: Property 1:N PageSection)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "address",
        "price",
        "mainImageUrl",
        "sectionIds"
      ]
    },
    "PageSection": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PageSection",
      "type": "object",
      "description": "Represents a modular section within a property detail page.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the PageSection entity."
        },
        "type": {
          "type": "string",
          "description": "Type of the section (e.g., 'HeroSection', 'GallerySection')."
        },
        "style": {
          "type": "string",
          "description": "Styling information for the section (e.g., background color)."
        },
        "propertyId": {
          "type": "string",
          "description": "Reference to Property. (Relationship: Property 1:N PageSection)"
        }
      },
      "required": [
        "id",
        "type",
        "style",
        "propertyId"
      ]
    },
    "ContactSubmission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ContactSubmission",
      "type": "object",
      "description": "Represents a contact form submission from a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the ContactSubmission entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the user submitting the form."
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the user."
        },
        "isBuyer": {
          "type": "boolean",
          "description": "Indicates if the user is a buyer."
        },
        "isBroker": {
          "type": "boolean",
          "description": "Indicates if the user is a broker."
        },
        "propertyId": {
          "type": "string",
          "description": "Reference to Property. (Relationship: Property 1:N ContactSubmission)"
        }
      },
      "required": [
        "id",
        "name",
        "phone",
        "isBuyer",
        "isBroker",
        "propertyId"
      ]
    },
    "Image": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Image",
      "type": "object",
      "description": "Represents an image stored in IndexedDB.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Image entity. This is the key used to retrieve the image from IndexedDB."
        },
        "blob": {
          "type": "string",
          "description": "The image data stored as a Blob (represented as a string)."
        }
      },
      "required": [
        "id",
        "blob"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/properties/{propertyId}",
        "definition": {
          "entityName": "Property",
          "schema": {
            "$ref": "#/backend/entities/Property"
          },
          "description": "Stores real estate property data. The `propertyId` uniquely identifies each property.",
          "params": [
            {
              "name": "propertyId",
              "description": "Unique identifier for the property."
            }
          ]
        }
      },
      {
        "path": "/properties/{propertyId}/pageSections/{pageSectionId}",
        "definition": {
          "entityName": "PageSection",
          "schema": {
            "$ref": "#/backend/entities/PageSection"
          },
          "description": "Stores modular sections within a property detail page. The `propertyId` identifies the parent property, and `pageSectionId` uniquely identifies each section.",
          "params": [
            {
              "name": "propertyId",
              "description": "Unique identifier for the parent property."
            },
            {
              "name": "pageSectionId",
              "description": "Unique identifier for the page section."
            }
          ]
        }
      },
      {
        "path": "/contactSubmissions/{contactSubmissionId}",
        "definition": {
          "entityName": "ContactSubmission",
          "schema": {
            "$ref": "#/backend/entities/ContactSubmission"
          },
          "description": "Stores contact form submissions from users. The `contactSubmissionId` uniquely identifies each submission.",
          "params": [
            {
              "name": "contactSubmissionId",
              "description": "Unique identifier for the contact submission."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to manage real estate property listings and related data, focusing on secure access and scalability for the Vía Hogar CMS application. Given that the user mentioned 'poner las fotos', the design prioritizes the storage and retrieval of images and property-related data. The structure emphasizes Authorization Independence, enabling secure list operations and maintaining data integrity, especially regarding image management. The primary data entities include Properties, PageSections, ContactSubmissions, and Images, all of which are critical for managing the CMS effectively.\n\nAuthorization Independence is achieved through path-based ownership for private user data and by avoiding the use of `get()` calls in security rules. Data is structured to facilitate efficient and secure operations, with denormalization applied where necessary. To fulfill Authorization Independence and the QAP principle (Rules Are Not Filters) the app uses segregated collections based on ownership. \n\nThe `Property` documents store core property details, while `PageSection` documents are nested under each `Property` to define the dynamic layout of property detail pages. `ContactSubmission` documents are collected separately for easy management of user inquiries. Since images are stored in IndexedDB within the application, a dedicated `images` collection is not required in Firestore. The `mainImageUrl` field and other similar fields in the `Property` entity will store the id of the images stored on the client, which are used to fetch from IndexedDB.\n"
  }
}